#!/usr/bin/env bash

# Set -u for bash
set -u

# KEYBOARD =======================================================================================

KEYBOARD_MESSAGES=""
# set internal XPS keyboard layout:
xps_internal_keyboard_id=$(xinput -list | awk -Fid= '/Virtual core keyboard/{ print $2 }' | awk '{ print $1 }')
if [ "${xps_internal_keyboard_id}" != "" ]; then
    setxkbmap -device "${xps_internal_keyboard_id}" -layout us,us,se -variant dvorak,, -option 'grp:shifts_toggle,ctrl:nocaps'
    KEYBOARD_MESSAGES="$KEYBOARD_MESSAGES\nFound $(xinput -list --name-only $xps_internal_keyboard_id)"
fi

# set Kinesis keyboard layout:
for kinesis_keyboard_id in $(xinput -list | awk -Fid= '/HID 05f3:0007/{ print $2 }' | awk '{ print $1 }'); do
    if [ "${kinesis_keyboard_id}" != "" ]; then
        setxkbmap -device "${kinesis_keyboard_id}" -model kinesis -layout us -option 'ctrl:nocaps'
    fi
    KEYBOARD_MESSAGES="$KEYBOARD_MESSAGES\nFound Kinesis Advantage Keyboard"
done

# Set Key rate
xset r rate 200 60

# Send notification
notify-send --urgency=NORMAL 'Detecting Keyboards' "$KEYBOARD_MESSAGES"


# MOUSE / TRACKPAD / TRACKBALL ===================================================================

# Set trackball
POINTING_DEVICE_MESSAGES=""
xps_trackpad_id=$(xinput -list | awk -Fid= '/Virtual core pointer/{ print $2 }' | awk '{ print $1 }')
if [ "${xps_trackpad_id}" != "" ]; then
    POINTING_DEVICE_MESSAGES="$POINTING_DEVICE_MESSAGES\nFound $(xinput -list --name-only $xps_trackpad_id)"
fi

slimblade_trackball_id=$(xinput -list | awk -Fid= '/Slimblade Trackball/{ print $2 }' | awk '{ print $1 }')
if [ "${slimblade_trackball_id}" != "" ]; then
    # http://wiki.mbirth.de/know-how/software/linux/remapping-mouse-buttons.html
    # Swapping 1/3 (left/right) and 2/8 (middle/thumb1) for left hand usage
    xinput set-button-map "${slimblade_trackball_id}" 3 8 1 4 5 6 7 2 9 10 11 12
    # threshold accelNum accelDenom
    xinput set-ptr-feedback "${slimblade_trackball_id}" 12 8 2

    POINTING_DEVICE_MESSAGES="$POINTING_DEVICE_MESSAGES\nFound $(xinput -list --name-only $slimblade_trackball_id)"
fi

# Send notification
notify-send --urgency=NORMAL 'Detecting pointing devices' "$POINTING_DEVICE_MESSAGES"

# Run autorandr else auto xrandr
if command -v autorandr; then
  autorandr --change
else
  xrandr --auto
fi
